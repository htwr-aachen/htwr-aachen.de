{
	// Configuration for JavaScript files
	"extends": [
		"airbnb-base",
		"next/core-web-vitals", // Needed to avoid warning in next.js build: 'The Next.js plugin was not detected in your ESLint configuration'
		"plugin:prettier/recommended"
	],
	"rules": {
		"import/order": [
			1,
			{
				"groups": [
					[
						"external",
						"builtin"
					],
					"internal",
					[
						"sibling",
						"parent"
					],
					"index"
				]
			}
		],
		"prettier/prettier": [
			"error",
			{
				"singleQuote": false,
				"endOfLine": "auto"
			}
		]
	},
	"overrides": [
		// Configuration for TypeScript files
		{
			"files": [
				"**/*.ts",
				"**/*.tsx"
			],
			"plugins": [
				"@typescript-eslint",
				"unused-imports",
				"tailwindcss",
				"simple-import-sort"
			],
			"extends": [
				"plugin:tailwindcss/recommended",
				"airbnb-typescript",
				"next/core-web-vitals",
				"plugin:prettier/recommended"
			],
			"parserOptions": {
				"project": "./tsconfig.json"
			},
			"rules": {
				"no-restricted-syntax": "off",
				"no-unused-vars": [
					"warn",
					{
						"argsIgnorePattern": "^_",
						"varsIgnorePattern": "^_",
						"destructuredArrayIgnorePattern": "^_"
					}
				],
				"no-cond-assign": "off",
				"no-nested-ternary": "off",
				"no-multi-assign": "off",
				"no-use-before-define": "off",
				"no-underscore-dangle": "off",
				"no-plusplus": "off", // Allow using ++ and --
				"no-continue": "off", // Allow using continue
				"no-param-reassign": "off", // Allow mutating function parameters
				"no-await-in-loop": "off", // Allow using await in loop
				"no-empty": "off", // Allow empty catch block
				"prefer-template": "warn",
				"prettier/prettier": [
					"error",
					{
						"singleQuote": false,
						"endOfLine": "auto"
					}
				],
				"react/no-unescaped-entities": "off", // Allow using HTML entities in JSX
				"react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
				"react/require-default-props": "off", // Allow non-defined react props as undefined
				"react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
				"react-hooks/exhaustive-deps": "off", // Incorrectly report needed dependency with Next.js router
				"@next/next/no-img-element": "off", // We currently not using next/image because it isn't supported with SSG mode
				"@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
				"@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
				"import/prefer-default-export": "off", // Named export is easier to refactor automatically
				"simple-import-sort/imports": "warn", // Import configuration for `eslint-plugin-simple-import-sort`
				"simple-import-sort/exports": "warn", // Export configuration for `eslint-plugin-simple-import-sort`
				"@typescript-eslint/no-unused-vars": [
					"error",
					{
						"args": "all",
						"argsIgnorePattern": "^_",
						"caughtErrors": "all",
						"caughtErrorsIgnorePattern": "^_",
						"destructuredArrayIgnorePattern": "^_",
						"varsIgnorePattern": "^_",
						"ignoreRestSiblings": true
					}
				],
				"unused-imports/no-unused-imports": "error",
				"unused-imports/no-unused-vars": [
					"error",
					{
						"argsIgnorePattern": "^_",
						"varsIgnorePattern": "^_",
						"destructuredArrayIgnorePattern": "^_"
					}
				],
				"tailwindcss/no-custom-classname": "off", // Allow custom classnames,
				"@typescript-eslint/naming-convention": [
					"error",
					{
						"selector": "variable",
						"format": [
							"camelCase",
							"UPPER_CASE",
							"PascalCase"
						],
						"leadingUnderscore": "allow",
						"trailingUnderscore": "allow"
					}
				]
			}
		},
		// Configuration for testing
		{
			"files": [
				"**/*.test.ts",
				"**/*.test.tsx"
			],
			"plugins": [
				"jest",
				"jest-formatting",
				"testing-library",
				"jest-dom"
			],
			"extends": [
				"plugin:jest/recommended",
				"plugin:jest-formatting/recommended",
				"plugin:testing-library/react",
				"plugin:jest-dom/recommended"
			]
		},
		// Configuration for e2e testing (Cypress)
		{
			"files": [
				"cypress/**/*.ts"
			],
			"plugins": [
				"cypress"
			],
			"extends": [
				"plugin:cypress/recommended"
			],
			"parserOptions": {
				"project": "./cypress/tsconfig.json"
			}
		}
	]
}
